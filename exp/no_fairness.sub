# ----------------------------------------------------------------------- #
# RUNTIME LIMITATION                                                      #
# ----------------------------------------------------------------------- #

# Maximum expected execution time for the job, in seconds
# 43200 = 12h
# 86400 = 24h
MaxTime = 43200
 
# Kill the jobs without warning
periodic_remove = (JobStatus =?= 2) && ((CurrentTime - JobCurrentStartDate) >= $(MaxTime))

# ----------------------------------------------------------------------- #
# RESSOURCE SELECTION                                                     #
# ----------------------------------------------------------------------- #

request_memory = 1024
request_cpus = 1

# ----------------------------------------------------------------------- #
# SCRIPT SELECTION                                                        #
# ----------------------------------------------------------------------- #

SelectedCost = 0.5
SelectedLearningRate = 0.01
SelectedData = FICO

# ----------------------------------------------------------------------- #
# FOLDER SELECTION                                                        #
# ----------------------------------------------------------------------- #

environment = "PYTHONUNBUFFERED=TRUE"
executable = /home/fkretschmar/miniconda3/envs/masters-thesis/bin/python

error = /home/fkretschmar/master-thesis/res/$(SelectedData)/error/experiment.$(Process).err
output = /home/fkretschmar/master-thesis/res/$(SelectedData)/output/experiment.$(Process).out
log = /home/fkretschmar/master-thesis/res/$(SelectedData)/log/experiment.$(Process).log

# ----------------------------------------------------------------------- #
# QUEUE                                                                   #
# ----------------------------------------------------------------------- #

arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 1 -bs 64 -nb 64      -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 1 -bs 64 -nb 128     -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 1 -bs 64 -nb 256     -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 1 -bs 128 -nb 64     -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 1 -bs 128 -nb 128    -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 1 -bs 128 -nb 256    -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 1 -bs 256 -nb 64     -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 1 -bs 256 -nb 128    -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 1 -bs 256 -nb 256    -pid $(Process)
queue 30


arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 5 -bs 64 -nb 64      -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 5 -bs 64 -nb 128     -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 5 -bs 64 -nb 256     -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 5 -bs 128 -nb 64     -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 5 -bs 128 -nb 128    -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 5 -bs 128 -nb 256    -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 5 -bs 256 -nb 64     -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 5 -bs 256 -nb 128    -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 5 -bs 256 -nb 256    -pid $(Process)
queue 30


arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 10 -bs 64 -nb 64    -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 10 -bs 64 -nb 128   -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 10 -bs 64 -nb 256   -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 10 -bs 128 -nb 64   -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 10 -bs 128 -nb 128  -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 10 -bs 128 -nb 256  -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 10 -bs 256 -nb 64   -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 10 -bs 256 -nb 128  -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 10 -bs 256 -nb 256  -pid $(Process)
queue 30


arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 50 -bs 64 -nb 64     -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 50 -bs 64 -nb 128    -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 50 -bs 64 -nb 256    -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 50 -bs 128 -nb 64    -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 50 -bs 128 -nb 128   -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 50 -bs 128 -nb 256   -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 50 -bs 256 -nb 64    -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 50 -bs 256 -nb 128   -pid $(Process)
queue 30
arguments = run.py -d $(SelectedData) -c $(SelectedCost) -lr $(SelectedLearningRate) -a -i 1 -p ../res/$(SelectedData)/raw -ts 200 -e 50 -bs 256 -nb 256   -pid $(Process)
queue 30
